version: "3.9"
name: MicroserviceContainer
services:
  serviceregistry:
    image: souravsamaddar007/serviceregistry:1.0.0
    container_name: serviceregistry
    ports:
      - "8761:8761"
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8761/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s

  configserver:
    image: souravsamaddar007/configserver:latest
    container_name: configserver
    ports:
      - "8085:8085"
    environment:
      - EUREKA_SERVER_ADDRESS=http://serviceregistry:8761/eureka
    depends_on:
      serviceregistry:
        condition: service_healthy
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8085/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s

  gatewayserver:
    image: souravsamaddar007/gatewayserver:latest
    container_name: gatewayserver
    ports:
      - "8084:8084"
    environment:
      - EUREKA_SERVER_ADDRESS=http://serviceregistry:8761/eureka
      - CONFIG_SERVER_ADDRESS=http://configserver:8085
    depends_on:
      configserver:
        condition: service_healthy
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8084/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s

  basiclogserver:
    image: souravsamaddar007/basiclogserver:latest
    container_name: basiclogserver
#    ports:
#      - "9099:9099"
    environment:
      - EUREKA_SERVER_ADDRESS=http://serviceregistry:8761/eureka
      - CONFIG_SERVER_ADDRESS=http://configserver:8085
    depends_on:
      configserver:
        condition: service_healthy
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9099/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s

  mysql:
    image: mysql:8.0
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: microservicedb
    ports:
      - "3306:3306"
    networks:
      - app-network
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost", "-uroot", "-proot" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s

  postgres:
    image: postgres:15
    container_name: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: root
      POSTGRES_DB: microservicedb
    ports:
      - "3308:5432"
    networks:
      - app-network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d microservicedb" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s

  mongodb:
    image: mongo:6.0
    container_name: mongodb
    environment:
      MONGO_INITDB_ROOT_USERNAME: appuser
      MONGO_INITDB_ROOT_PASSWORD: app123
      MONGO_INITDB_DATABASE: microservicesdb
    ports:
      - "27017:27017"
    networks:
      - app-network
    healthcheck:
      test: [ "CMD", "mongo", "--username", "appuser", "--password", "app123", "--authenticationDatabase", "microservicesdb", "--eval", "db.adminCommand('ping')" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s

  userservice:
    image: souravsamaddar007/userservice:latest
    container_name: userservice
    ports:
      - "8081:8081"
    environment:
      - EUREKA_SERVER_ADDRESS=http://serviceregistry:8761/eureka
      - CONFIG_SERVER_ADDRESS=http://configserver:8085
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql:3306/microservicedb?serverTimezone=UTC
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=root
    depends_on:
      mysql:
        condition: service_healthy
      configserver:
        condition: service_healthy
    networks:
      - app-network
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8081/actuator/health" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s

  hotelservice:
    image: souravsamaddar007/hotelservice:latest
    container_name: hotelservice
    ports:
      - "8082:8082"
    environment:
      - EUREKA_SERVER_ADDRESS=http://serviceregistry:8761/eureka
      - CONFIG_SERVER_ADDRESS=http://configserver:8085
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/microservicedb
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=root
    depends_on:
      postgres:
        condition: service_healthy
      configserver:
        condition: service_healthy
    networks:
      - app-network
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8082/actuator/health" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s

  ratingservice:
    image: souravsamaddar007/ratingservice:latest
    container_name: ratingservice
    ports:
      - "8083:8083"
    environment:
      - EUREKA_SERVER_ADDRESS=http://serviceregistry:8761/eureka
      - CONFIG_SERVER_ADDRESS=http://configserver:8085
      - SPRING_DATA_MONGODB_URI=mongodb://appuser:app123@mongodb:27017/microservicesdb?authSource=microservicesdb
    depends_on:
      mongodb:
        condition: service_healthy
      configserver:
        condition: service_healthy
    networks:
      - app-network
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8083/actuator/health" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s

networks:
  app-network:
    driver: bridge
